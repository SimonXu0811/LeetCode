自己的思路
首先如果是负数那么肯定就不是回文数
然后新建一个数，将原来的数翻转
然后比较翻转后的数和原来的数是否相等

自己的代码
class Solution {
    public boolean isPalindrome(int x) {
        if(x < 0) return false;//负数肯定不是
        int res = 0;
        int n = x;
        while(n != 0){//翻转数
            res = res * 10 + n % 10;
            n /= 10;
        }
        
        return res == x;//判断是否相等
    }
}

时间复杂度分析
时间取决于数的长度，所以时间复杂度为:O(logn)

空间复杂度分析
没有额外的空间，所以空间复杂度为:O(1)
