思路
用递归的方式遍历两棵树
如果两个都为空树，那么等
如果两边的值相等，那么就返回true

代码
class Solution {
  public boolean isSameTree(TreeNode p, TreeNode q) {
    if (p == null && q == null) return true;//都为空树的话那么返回true
    if (q == null || p == null) return false;//如果一个为空树一个不是，那么返回false
    if (p.val != q.val) return false;//如果两个不等，那么就返回false
    return isSameTree(p.right, q.right) &&isSameTree(p.left, q.left);//递归
  }
}

时间复杂度分析
递归了所有的元素，所以时间复杂度为:O(n)

空间复杂度分析
没有用到额外的空间，所以空间复杂度为:O(1)
