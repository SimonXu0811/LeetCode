自己的思路就是想到HashSet不允许有重复值，那么就判断是否在set中，如果在就不加，不在就加
最后把set中的值复制回去

时间复杂度分析
第一次遍历数组，把值放进set中，所用的时间为T(n)
第二次遍历数组，把set再复制回去，所用的时间为T(n)
总共所用的时间为T(n)=T(n)+T(n)
转成高阶无穷小就为:O(n)

空间复杂度分析
每一次加一个元素进set中就借用了一次临时空间，所以空间复杂度为:O(1)



别人的思路
用双指针，一个指针用来遍历数组，还有一个指针用来复制数据进去，由于是有序数组，所以不用担心遗漏

时间复杂度分析
遍历了一次数组，所以时间复杂度为:O(n)

空间复杂度分析
这个是原地算法，所以空间复杂度为:O(1)
