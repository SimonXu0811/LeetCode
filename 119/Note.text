自己的思路
先添加第一个数组{1}，如果index为0就返回这个
创建一个pre数组用来保存上一个数组，由于第一个是{1}，所以默认的初始值为1
再创建一个row用来记录当前的数组，如果没有到达目标index就重置

时间复杂度分析
一个循环用来推算到目标的index，所用时间为T(rowIndex)
第二个循环用来确定数组的元素个数，所用时间为T(rowIndex)
由于两个循环嵌套，所以总用时为T(rowIndex^2)
转成高阶无穷小为:O(n^2)

空间复杂度分析
没有用到临时的储存空间，所以空间复杂度为O(1)



别人的思路
利用二项式定理来计算当前索引的值每个值都是C(n,rowIndex)
最后一个一个加进去就好

时间复杂度分析
就遍历了一次数组，用来储存个数T(n)
转成高阶无穷小为:O(n)

空间复杂度分析
没有用到临时的空间，所以空间复杂度为:O(1)
