思路
最低位的1或0表示奇、偶数，若区间[m,n]包含>=2个数字，则最低位必为0
因此:区间长度>1,即m!=n,能用于确定按位与的最低位等于0 ----推出----> while循环的判断条件
区间长度=1,即m==n

代码
class Solution {
    public int rangeBitwiseAnd(int m, int n) {
        int cnt = 0;
        while(m!=n) {
        	if(m==0)
        		return 0;
        	m >>= 1;//不断的右移直到相等找公共前缀
        	n >>= 1;
        	cnt++;
        }
        return m<<cnt;//恢复即可
    }
}

时间复杂度分析
取决于两个的差，所以时间复杂度为:O(n)

空间复杂度分析
常数级的空间，所以空间复杂度为:O(1)
