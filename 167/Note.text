自己的思路
循环一次数组，设为目标值
然后再计算出另一个目标值
再遍历一次数组，如果找到则返回

时间复杂度分析
遍历了两次数组，并且嵌套，所以时间复杂度为:O(n^2)

空间复杂度分析
没有用到额外的数组，所以空间复杂度为:O(n)


别人的思路
利用已经排好序的性质，利用双指针
如果两个加起来大雨目标，那么把右边的减小，如果小于，把左边的扩大

时间复杂度分析
最好的情况就是一下就找到，所用的时间为T(1)
最坏的情况就是最后一个才是目标，所以遍历了一整个数组，所用时间为T(n)
平均所用的时间复杂度就为:O(n)

空间复杂度分析
没有用到额外的数组空间，所以空间复杂度为:O(1)
