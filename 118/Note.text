自己的思路
除非给出的num为0.否则二维数组中，第一个数组肯定是{1}
后面的数组根据规律来看，从第二个索引开始，后面的数都是由上面数组中的数顺序两两相加而来
开头和结尾的数必定为1

时间复杂度分析
第一开始的循环遍历数组的大小，控制一维数组的大小逐渐加一，所用时间为T(numRow)
后面一个循环用来遍历数组内值的个数，所用时间为T(numRow)
两个循环嵌套，所以总用时为T(n)=T(numRow^2)
转成高阶无穷小就为O(n^2)

空间复杂度分析
没有用到额外的临时数组，所以空间复杂度就为O(1)
