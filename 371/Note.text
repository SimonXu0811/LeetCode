自己的思路，调用内置函数Math.sum(a,b);
时间复杂度和空间复杂度都是O(1)
但是有些作弊，明显题目就并不是这么个意思



别人的思路
利用异或表示本位的+
利用与表示进位的地方
利用<<表示*
利用>>表示/

时间复杂度分析
这边唯一的用时就是递归，递归的次数取决于bit数，所以用时为T(k)
以32位为例，转成高阶无穷小就为:O(1)

空间复杂度分析
没有其他的临时空间，所以空间复杂度为:O(1)
